{
  "bin": {
    "compile": "compile",
    "run": "run"
  },
  "dependencies": {
    "dependency-env": "https://github.com/npm-ml/dependency-env.git",
    "nopam": "https://github.com/yunxing/nopam.git",
    "yojson": "https://github.com/npm-opam/yojson",
    "jenga": "https://github.com/npm-opam/jenga"
  },
  "description": "Prototype that conforms to the magic-build spec. Implemented with Jenga.",
  "devDependencies": {},
  "license": "ISC",
  "name": "rebel",
  "scripts": {
    "extract:deps": "ocamlfind ocamlc -pp refmt -linkpkg -package yojson -g -impl buildUtils/extractDeps.re -o buildUtils/extractDeps.out",
    "extract:ocamlfind-deps": "ocamlfind ocamlc -pp refmt -linkpkg -package yojson -g -impl buildUtils/extractOcamlfindDeps.re -o buildUtils/extractOcamlfindDeps.out",
    "extract:rebel-compat": "ocamlfind ocamlc -pp refmt -linkpkg -package yojson -g -impl buildUtils/isDepRebelCompatible.re -o buildUtils/isDepRebelCompatible.out",
    "extract": "npm run extract:deps && npm run extract:ocamlfind-deps && npm run extract:rebel-compat",
    "rebel-to-ml": "refmt -print ml -parse re rebel.re | sed 's/\\[@explicit_arity \\]//g' > rebel.ml",
    "postinstall": "eval $(dependencyEnv) && nopam && npm run extract && npm run rebel-to-ml",
    "rebel": "eval $(dependencyEnv) && nopam && ./configure --prefix $opam_prefix && make"
  },
  "version": "0.0.23"
}
